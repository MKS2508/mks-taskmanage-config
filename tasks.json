[
  {
    "id": "task-mvp-0-1",
    "projectId": "telegram-bot-unified",
    "title": "Project Setup & Basic Structure",
    "description": "Set up basic project structure and ensure all dependencies work correctly",
    "status": "todo",
    "priority": "high",
    "phase": "phase-1-mvp",
    "tags": [
      "setup",
      "dependencies",
      "structure",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [],
    "subtasks": [
      "Verify all package.json dependencies are installed",
      "Test bun runtime with simple React Ink app",
      "Create basic telegram-cli.tsx shell that starts without errors",
      "Verify .env file structure and environment variables",
      "Test data/products.json file loading"
    ]
  },
  {
    "id": "task-mvp-1-1a",
    "projectId": "telegram-bot-unified",
    "title": "Extract Bot Logic from index.js",
    "description": "Extract and understand the bot logic from index.js as separate module",
    "status": "todo",
    "priority": "high",
    "phase": "phase-1-mvp",
    "tags": [
      "bot",
      "extraction",
      "analysis",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-0-1"
    ],
    "subtasks": [
      "Read and analyze index.js bot implementation",
      "Identify key functions: saveUser, playNotificationSound, getTimestamp",
      "Extract Telegraf bot configuration and event handlers",
      "Understand users.json file structure and operations",
      "Document sound notification system for different platforms"
    ]
  },
  {
    "id": "task-mvp-1-1b",
    "projectId": "telegram-bot-unified",
    "title": "Create IntegratedBotService Class",
    "description": "Create a TypeScript class that encapsulates bot functionality with EventEmitter",
    "status": "todo",
    "priority": "high",
    "phase": "phase-1-mvp",
    "tags": [
      "bot",
      "class",
      "typescript",
      "events",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 2,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-1-1a"
    ],
    "subtasks": [
      "Create IntegratedBotService class extending EventEmitter",
      "Implement constructor with users.json file management",
      "Add private methods: saveUser, playNotificationSound, getTimestamp",
      "Implement async start(token) method with Telegraf setup",
      "Add event emission for user interactions (emit 'userEvent')"
    ]
  },
  {
    "id": "task-mvp-1-1c",
    "projectId": "telegram-bot-unified",
    "title": "Connect Bot Service to React App",
    "description": "Integrate the bot service with React state management and lifecycle",
    "status": "todo",
    "priority": "high",
    "phase": "phase-1-mvp",
    "tags": [
      "react",
      "integration",
      "hooks",
      "state",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-1-1b"
    ],
    "subtasks": [
      "Create useBotService custom hook",
      "Implement bot service initialization in useEffect",
      "Set up event listeners for bot events in React",
      "Manage bot status state (disconnected/connecting/connected/error)",
      "Auto-start bot with TELEGRAM_BOT_TOKEN from env"
    ]
  },
  {
    "id": "task-mvp-1-2a",
    "projectId": "telegram-bot-unified",
    "title": "Create Basic Event Data Structure",
    "description": "Define TypeScript interfaces for bot events and user data",
    "status": "todo",
    "priority": "high",
    "phase": "phase-1-mvp",
    "tags": [
      "typescript",
      "interfaces",
      "events",
      "data",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 0.5,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-1-1a"
    ],
    "subtasks": [
      "Define User interface (id, username, first_name, last_name, etc.)",
      "Define BotEvent interface (type, user, timestamp, context, id)",
      "Create event type enum ('new_user' | 'message' | 'miniapp_launch')",
      "Add utility functions for timestamp formatting",
      "Create event formatting helper functions"
    ]
  },
  {
    "id": "task-mvp-1-2b",
    "projectId": "telegram-bot-unified",
    "title": "Build LiveActivityFeed Component",
    "description": "Create React component to display real-time user activity",
    "status": "todo",
    "priority": "high",
    "phase": "phase-1-mvp",
    "tags": [
      "react",
      "component",
      "ui",
      "real-time",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1.5,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-1-2a",
      "task-mvp-1-1c"
    ],
    "subtasks": [
      "Create LiveActivityFeed functional component",
      "Implement props interface for events array",
      "Add visual formatting with emoji and colors",
      "Display timestamp, event type, and user info",
      "Show 'Waiting for activity...' when no events",
      "Limit display to last 8-10 events"
    ]
  },
  {
    "id": "task-mvp-2-1a",
    "projectId": "telegram-bot-unified",
    "title": "Define Product TypeScript Interfaces",
    "description": "Create TypeScript interfaces matching the existing product data structure",
    "status": "todo",
    "priority": "high",
    "phase": "phase-1-mvp",
    "tags": [
      "typescript",
      "products",
      "interfaces",
      "data",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 0.5,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-0-1"
    ],
    "subtasks": [
      "Analyze data/products.json structure",
      "Create Product interface with all required fields",
      "Define ProductAvailability type ('soldout' | 'last units' | 'available')",
      "Add optional fields (videoSourcesPaths, bulkPrices, order)",
      "Validate interface matches actual JSON data structure"
    ]
  },
  {
    "id": "task-mvp-2-1b",
    "projectId": "telegram-bot-unified",
    "title": "Implement useProducts Hook",
    "description": "Create custom React hook for loading and managing product data",
    "status": "todo",
    "priority": "high",
    "phase": "phase-1-mvp",
    "tags": [
      "react",
      "hooks",
      "products",
      "data",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1.5,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-2-1a"
    ],
    "subtasks": [
      "Create useProducts custom hook function",
      "Implement async product loading from data/products.json",
      "Add loading state management",
      "Create product categorization (availableProducts, soldOutProducts, etc.)",
      "Add error handling for file loading failures",
      "Return categorized product arrays and loading state"
    ]
  },
  {
    "id": "task-mvp-2-2a",
    "projectId": "telegram-bot-unified",
    "title": "Build Basic Product List Component",
    "description": "Create a simple product list component with basic display",
    "status": "todo",
    "priority": "high",
    "phase": "phase-1-mvp",
    "tags": [
      "react",
      "component",
      "products",
      "list",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-2-1b"
    ],
    "subtasks": [
      "Create ProductSelector component with products prop",
      "Display product list with name, price range, availability",
      "Add visual indicators (✅ ❌ ⚠️) for availability status",
      "Show product type and farm information",
      "Handle empty product list case",
      "Add basic Box styling with borders"
    ]
  },
  {
    "id": "task-mvp-2-2b",
    "projectId": "telegram-bot-unified",
    "title": "Add Product Selection Logic",
    "description": "Implement multi-select functionality for products",
    "status": "todo",
    "priority": "medium",
    "phase": "phase-1-mvp",
    "tags": [
      "interaction",
      "selection",
      "state",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-2-2a"
    ],
    "subtasks": [
      "Add selectedProducts Set state to parent component",
      "Implement onToggleProduct callback function",
      "Add selection indicators (✅ selected, ⬜ unselected)",
      "Update component to show selection count",
      "Add keyboard navigation with useInput hook",
      "Implement SPACE key for toggle selection"
    ]
  },
  {
    "id": "task-mvp-2-2c",
    "projectId": "telegram-bot-unified",
    "title": "Add Search and Filter Features",
    "description": "Implement search and availability filtering for products",
    "status": "todo",
    "priority": "medium",
    "phase": "phase-1-mvp",
    "tags": [
      "search",
      "filter",
      "interaction",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1.5,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-2-2b"
    ],
    "subtasks": [
      "Add search functionality triggered by '/' key",
      "Implement TextInput component for search",
      "Add filter state for availability (all/available/soldout/lastunits)",
      "Implement 'F' key to cycle through filters",
      "Create filteredProducts useMemo for performance",
      "Show current filter and search status in UI"
    ]
  },
  {
    "id": "task-mvp-3-1a",
    "projectId": "telegram-bot-unified",
    "title": "Create Product Message Templates",
    "description": "Design professional HTML message templates for different scenarios",
    "status": "todo",
    "priority": "medium",
    "phase": "phase-1-mvp",
    "tags": [
      "templates",
      "html",
      "messaging",
      "design",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 2,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-2-1a"
    ],
    "subtasks": [
      "Create PRODUCT_TEMPLATES object with template strings",
      "Design 'newProduct' template with product details and pricing",
      "Create 'inventoryUpdate' template for bulk updates",
      "Design 'lastUnits' template for urgency messaging",
      "Add 'catalogUpdate' template for general announcements",
      "Include emojis, HTML formatting (bold, italic), and professional structure"
    ]
  },
  {
    "id": "task-mvp-3-2a",
    "projectId": "telegram-bot-unified",
    "title": "Implement Template Variable System",
    "description": "Create system to replace template variables with actual product data",
    "status": "todo",
    "priority": "medium",
    "phase": "phase-1-mvp",
    "tags": [
      "templates",
      "variables",
      "formatting",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1.5,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-3-1a"
    ],
    "subtasks": [
      "Create formatProductMessage(template, product) function",
      "Implement variable replacement logic for {product.nombre}, {product.tipo}, etc.",
      "Add price calculation for {minPrice}, {maxPrice} from product.precios",
      "Create availability emoji mapping function",
      "Handle {tags} array formatting",
      "Add error handling for missing product properties"
    ]
  },
  {
    "id": "task-mvp-3-2b",
    "projectId": "telegram-bot-unified",
    "title": "Build Message Preview Component",
    "description": "Create component to preview formatted messages before sending",
    "status": "todo",
    "priority": "low",
    "phase": "phase-1-mvp",
    "tags": [
      "react",
      "component",
      "preview",
      "ui",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-3-2a"
    ],
    "subtasks": [
      "Create MessagePreview component",
      "Show formatted message for first selected product",
      "Display 'Select products to preview' when none selected",
      "Add bordered box styling for preview area",
      "Handle long messages with proper text wrapping",
      "Update preview in real-time when products/templates change"
    ]
  },
  {
    "id": "task-mvp-4-1a",
    "projectId": "telegram-bot-unified",
    "title": "Create App Layout Structure",
    "description": "Build basic app layout with status bar and main content area",
    "status": "todo",
    "priority": "medium",
    "phase": "phase-1-mvp",
    "tags": [
      "layout",
      "structure",
      "ui",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-1-2b",
      "task-mvp-2-2a"
    ],
    "subtasks": [
      "Create main TelegramBotManager component",
      "Add AppState interface for centralized state management",
      "Create StatusBar component showing bot status and mode",
      "Implement mode state ('monitor' | 'send')",
      "Add basic Box layout structure with flexDirection column",
      "Show bot connection status and basic statistics"
    ]
  },
  {
    "id": "task-mvp-4-1b",
    "projectId": "telegram-bot-unified",
    "title": "Implement Mode Switching",
    "description": "Add ability to switch between Monitor and Send modes",
    "status": "todo",
    "priority": "medium",
    "phase": "phase-1-mvp",
    "tags": [
      "navigation",
      "modes",
      "interaction",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-4-1a"
    ],
    "subtasks": [
      "Add global useInput hook for app-level shortcuts",
      "Implement F2 key for mode switching",
      "Create MonitorScreen component layout",
      "Create SendScreen component layout",
      "Add conditional rendering based on current mode",
      "Update StatusBar to show current mode"
    ]
  },
  {
    "id": "task-mvp-4-2a",
    "projectId": "telegram-bot-unified",
    "title": "Build Monitor Screen Layout",
    "description": "Create the Monitor mode screen with live activity and product selection",
    "status": "todo",
    "priority": "medium",
    "phase": "phase-1-mvp",
    "tags": [
      "layout",
      "monitor",
      "ui",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-4-1b"
    ],
    "subtasks": [
      "Create MonitorScreen component",
      "Layout LiveActivityFeed and ProductSelector side by side",
      "Add responsive sizing for both components",
      "Integrate real-time events from bot service",
      "Connect product selection state management",
      "Add visual separation between components"
    ]
  },
  {
    "id": "task-mvp-4-2b",
    "projectId": "telegram-bot-unified",
    "title": "Build Send Screen Layout",
    "description": "Create the Send mode screen with template selection and user targeting",
    "status": "todo",
    "priority": "medium",
    "phase": "phase-1-mvp",
    "tags": [
      "layout",
      "send",
      "ui",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1.5,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-4-2a",
      "task-mvp-3-2b"
    ],
    "subtasks": [
      "Create SendScreen component",
      "Add TemplateSelector component for choosing templates",
      "Integrate MessagePreview component",
      "Create UserSelector component for recipient selection",
      "Layout components in logical flow (template -> preview -> users)",
      "Add send button/shortcut integration"
    ]
  },
  {
    "id": "task-mvp-5-1a",
    "projectId": "telegram-bot-unified",
    "title": "Implement Basic Message Sending",
    "description": "Create core message sending functionality using bot service",
    "status": "todo",
    "priority": "low",
    "phase": "phase-1-mvp",
    "tags": [
      "messaging",
      "telegram",
      "integration",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 2,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-4-2b",
      "task-mvp-1-1c"
    ],
    "subtasks": [
      "Create handleSend function in main app component",
      "Get bot instance from IntegratedBotService",
      "Implement text message sending with HTML parsing",
      "Add basic error handling and status feedback",
      "Implement CTRL+S keyboard shortcut for sending",
      "Show sending progress with loading states"
    ]
  },
  {
    "id": "task-mvp-5-1b",
    "projectId": "telegram-bot-unified",
    "title": "Add Photo Message Support",
    "description": "Extend message sending to include product photos when available",
    "status": "todo",
    "priority": "low",
    "phase": "phase-1-mvp",
    "tags": [
      "messaging",
      "photos",
      "media",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-5-1a"
    ],
    "subtasks": [
      "Check if product has mediaSourcesPaths[0]",
      "Use bot.telegram.sendPhoto when image available",
      "Set formatted message as photo caption",
      "Fallback to text message when no image",
      "Add rate limiting (100ms delay) between messages",
      "Handle photo sending errors gracefully"
    ]
  },
  {
    "id": "task-mvp-5-2a",
    "projectId": "telegram-bot-unified",
    "title": "Add Help System",
    "description": "Create comprehensive help screen with keyboard shortcuts and usage guide",
    "status": "todo",
    "priority": "low",
    "phase": "phase-1-mvp",
    "tags": [
      "help",
      "documentation",
      "ui",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-4-2b"
    ],
    "subtasks": [
      "Create HelpScreen component",
      "Document all keyboard shortcuts (F1, F2, ESC, etc.)",
      "Explain Monitor mode features and controls",
      "Explain Send mode features and controls",
      "Add help toggle with F1 key",
      "Include ESC key to exit help"
    ]
  },
  {
    "id": "task-mvp-5-3a",
    "projectId": "telegram-bot-unified",
    "title": "End-to-End Testing",
    "description": "Test complete MVP workflow from bot listening to message sending",
    "status": "todo",
    "priority": "low",
    "phase": "phase-1-mvp",
    "tags": [
      "testing",
      "e2e",
      "validation",
      "mvp"
    ],
    "assignee": "developer",
    "createdAt": "2024-12-22T19:00:00Z",
    "updatedAt": "2024-12-22T19:00:00Z",
    "dueDate": "2024-12-22T23:59:59Z",
    "estimatedHours": 1,
    "actualHours": 0,
    "dependencies": [
      "task-mvp-5-1b",
      "task-mvp-5-2a"
    ],
    "subtasks": [
      "Test app startup and bot connection",
      "Verify product loading from JSON file",
      "Test user capture and live activity display",
      "Test product selection and filtering",
      "Test template formatting and message preview",
      "Test actual message sending to Telegram",
      "Verify sound notifications work",
      "Document any issues or bugs found"
    ]
  },
  {
    "id": "task1",
    "projectId": "project1",
    "title": "Implementar autenticación",
    "description": "Agregar sistema de login con soporte para múltiples proveedores",
    "status": "todo",
    "priority": "high",
    "tags": [
      "frontend",
      "security"
    ],
    "assignee": "user1",
    "createdAt": "2023-01-15T10:00:00Z",
    "updatedAt": "2023-01-15T10:00:00Z",
    "dueDate": "2023-02-01T23:59:59Z"
  },
  {
    "id": "task2",
    "projectId": "project1",
    "title": "Diseñar página de inicio",
    "description": "Crear diseño responsive para la landing page",
    "status": "in-progress",
    "priority": "medium",
    "tags": [
      "design",
      "frontend"
    ],
    "assignee": "user2",
    "createdAt": "2023-01-16T09:30:00Z",
    "updatedAt": "2023-01-18T14:20:00Z",
    "dueDate": "2023-01-25T23:59:59Z"
  },
  {
    "id": "task3",
    "projectId": "project1",
    "title": "Optimizar consultas de base de datos",
    "description": "Mejorar rendimiento de consultas principales",
    "status": "completed",
    "priority": "high",
    "tags": [
      "backend",
      "performance"
    ],
    "assignee": "user3",
    "createdAt": "2023-01-10T11:45:00Z",
    "updatedAt": "2023-01-20T16:30:00Z",
    "completedAt": "2023-01-20T16:30:00Z",
    "dueDate": "2023-01-22T23:59:59Z"
  },
  {
    "id": "task4",
    "projectId": "project2",
    "title": "Implementar sistema de notificaciones",
    "description": "Agregar notificaciones en tiempo real para eventos importantes",
    "status": "todo",
    "priority": "medium",
    "tags": [
      "frontend",
      "backend"
    ],
    "assignee": "user1",
    "createdAt": "2023-01-18T13:20:00Z",
    "updatedAt": "2023-01-18T13:20:00Z",
    "dueDate": "2023-02-05T23:59:59Z"
  },
  {
    "id": "task5",
    "projectId": "project2",
    "title": "Crear documentación de API",
    "description": "Documentar todos los endpoints de la API con ejemplos",
    "status": "in-progress",
    "priority": "low",
    "tags": [
      "documentation",
      "api"
    ],
    "assignee": "user2",
    "createdAt": "2023-01-19T09:15:00Z",
    "updatedAt": "2023-01-21T11:45:00Z",
    "dueDate": "2023-02-10T23:59:59Z"
  },
  {
    "id": "task6",
    "projectId": "project3",
    "title": "Implementar modo oscuro",
    "description": "Agregar soporte para tema oscuro en toda la aplicación",
    "status": "todo",
    "priority": "low",
    "tags": [
      "frontend",
      "ui"
    ],
    "assignee": "user3",
    "createdAt": "2023-01-20T14:30:00Z",
    "updatedAt": "2023-01-20T14:30:00Z",
    "dueDate": "2023-02-15T23:59:59Z"
  },
  {
    "id": "task7",
    "projectId": "project3",
    "title": "Migrar a TypeScript",
    "description": "Convertir codebase de JavaScript a TypeScript",
    "status": "in-progress",
    "priority": "high",
    "tags": [
      "refactor",
      "typescript"
    ],
    "assignee": "user1",
    "createdAt": "2023-01-15T16:45:00Z",
    "updatedAt": "2023-01-22T10:30:00Z",
    "dueDate": "2023-02-20T23:59:59Z"
  },
  {
    "id": "task8",
    "projectId": "project3",
    "title": "Implementar tests automatizados",
    "description": "Configurar CI/CD con tests unitarios y de integración",
    "status": "completed",
    "priority": "medium",
    "tags": [
      "testing",
      "devops"
    ],
    "assignee": "user2",
    "createdAt": "2023-01-10T09:00:00Z",
    "updatedAt": "2023-01-19T15:20:00Z",
    "completedAt": "2023-01-19T15:20:00Z",
    "dueDate": "2023-01-20T23:59:59Z"
  }
]